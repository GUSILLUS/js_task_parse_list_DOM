{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","sortList","listOfEmployees","employees","children","sort","a","b","convertToNumber","dataset","salary","map","person","append","Number","split","join","replace","getEmployees","name","textContent","trim","position","age"],"mappings":";AAAA,aAkCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAhCA,IAAMA,EAAOC,SAASC,cAAc,MAE9BC,EAAW,SAAAC,GACTC,IAAAA,EAAgBD,EAAAA,EAAgBE,UAS/BD,OAPPA,EACGE,KAAK,SAACC,EAAGC,GACDC,OAAAA,EAAgBD,EAAEE,QAAQC,QAC7BF,EAAgBF,EAAEG,QAAQC,UAE/BC,IAAI,SAAAC,GAAUd,OAAAA,EAAKe,OAAOD,KAEtBT,GAGHK,EAAkB,SAAAE,GACfI,OAAAA,OAAOJ,EAAOK,MAAM,KAAKC,KAAK,IAAIC,QAAQ,IAAK,OAGlDC,EAAe,SAAAhB,GAGZC,OAFeD,EAAAA,EAAgBE,UAErBO,IAAI,SAAAC,GAAW,MAAA,CAC9BO,KAAMP,EAAOQ,YAAYC,OACzBC,SAAUV,EAAOH,QAAQa,SACzBZ,OAAQE,EAAOH,QAAQC,OACvBa,IAAKX,EAAOH,QAAQc,QAIxBtB,EAASH,GAEToB,EAAapB","file":"main.015f529f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nconst sortList = listOfEmployees => {\n  const employees = [...listOfEmployees.children];\n\n  employees\n    .sort((a, b) => {\n      return convertToNumber(b.dataset.salary)\n        - convertToNumber(a.dataset.salary);\n    })\n    .map(person => list.append(person));\n\n  return employees;\n};\n\nconst convertToNumber = salary => {\n  return Number(salary.split('$').join('').replace(',', '.'));\n};\n\nconst getEmployees = listOfEmployees => {\n  const employees = [...listOfEmployees.children];\n\n  return employees.map(person => ({\n    name: person.textContent.trim(),\n    position: person.dataset.position,\n    salary: person.dataset.salary,\n    age: person.dataset.age,\n  }));\n};\n\nsortList(list);\n\ngetEmployees(list);\n"]}